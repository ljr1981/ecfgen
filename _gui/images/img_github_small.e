note
	description: "Pixel buffer that replaces original image file.%
		%The original version of this class has been generated by Image Eiffel Code."

class
	IMG_GITHUB_SMALL

inherit
	EV_PIXEL_BUFFER

create
	make

feature {NONE} -- Initialization

	make
			-- Initialization
		do
			make_with_size (16, 16)
			fill_memory
		end

feature {NONE} -- Image data

	c_colors_0 (a_ptr: POINTER; a_offset: INTEGER)
			-- Fill `a_ptr' with colors data from `a_offset'.
		external
			"C inline"
		alias
			"{
			{
				#define B(q) \
					#q
				#ifdef EIF_WINDOWS
				#define A(a,r,g,b) \
					B(\x##b\x##g\x##r\x##a)
				#else
				#define A(a,r,g,b) \
					B(\x##r\x##g\x##b\x##a)
				#endif
				char l_data[] = 
				A(00,00,00,00)A(00,00,00,00)A(00,00,00,00)A(00,00,00,00)A(00,00,00,00)A(00,00,00,00)A(00,00,00,00)A(00,00,00,00)A(00,00,00,00)A(00,00,00,00)A(00,00,00,00)A(00,00,00,00)A(00,00,00,00)A(00,00,00,00)A(00,00,00,00)A(00,00,00,00)A(00,00,00,00)A(00,80,80,80)A(00,80,80,80)A(00,80,80,80)A(00,84,81,7B)A(0B,7C,7F,85)A(82,59,7A,A2)A(E8,29,76,B4)A(FF,1C,76,B7)A(E8,29,76,B4)A(82,59,7A,A2)A(0B,7C,7F,85)A(00,84,81,7B)A(00,80,80,80)A(00,80,80,80)A(00,80,80,80)A(00,00,00,00)A(00,80,80,80)A(00,80,80,80)A(00,81,80,7F)A(5C,66,7C,99)A(DE,34,77,B1)A(FF,19,75,B6)A(FF,1E,76,B6)A(FF,1F,76,B6)A(FF,1E,76,B6)A(FF,19,75,B6)A(DE,34,77,B1)A(5C,66,7C,99)A(00,81,80,7F)A(00,80,80,80)A(00,80,80,80)A(00,00,00,00)A(00,80,80,80)A(00,81,80,7F)A(90,55,7A,A4)A(FF,0D,75,B8)A(FF,1F,77,B7)A(FF,15,75,B6)A(FF,00,6B,B2)A(FF,00,6B,B2)A(FF,00,6B,B2)A(FF,22,77,B7)A(FF,1E,76,B7)A(FF,0D,75,B8)A(90,55,7A,A4)A(00,81,80,7F)A(00,80,80,80)A(00,00,00,00)A(00,84,81,7B)A(6C,61,7B,9D)A(FF,0B,75,B8)A(FF,00,71,B4)A(FF,7A,9D,C7)A(FF,E9,EE,F4)A(FF,C2,CF,E1)A(FF,CE,D8,E7)A(FF,C6,D2,E3)A(FF,EB,EF,F5)A(FF,63,8F,C1)A(FF,06,73,B5)A(FF,0B,75,B8)A(6C,61,7B,9D)A(00,84,81,7B)
				A(00,00,00,00)A(21,75,7E,8C)A(EC,2C,77,B4)A(FF,1C,76,B7)A(FF,00,6E,B3)A(FF,A3,B8,D5)A(FF,FF,FF,FF)A(FF,FF,FF,FF)A(FF,FF,FF,FF)A(FF,FF,FF,FF)A(FF,FF,FF,FF)A(FF,9F,B5,D3)A(FF,00,6E,B3)A(FF,1C,76,B7)A(EC,2C,77,B4)A(21,75,7E,8C)A(00,00,00,00)A(AC,48,79,AA)A(FF,1C,76,B7)A(FF,1F,76,B6)A(FF,00,6C,B3)A(FF,D8,E0,EC)A(FF,FF,FF,FF)A(FF,FF,FF,FF)A(FF,FF,FF,FF)A(FF,FF,FF,FF)A(FF,FF,FF,FF)A(FF,DA,E2,ED)A(FF,00,6C,B3)A(FF,1F,76,B6)A(FF,1C,76,B7)A(AC,48,79,AA)A(00,00,00,00)A(FB,1D,76,B6)A(FF,1F,76,B6)A(FF,1F,76,B6)A(FF,00,6C,B3)A(FF,B9,C8,DE)A(FF,FF,FF,FF)A(FF,FF,FF,FF)A(FF,FF,FF,FF)A(FF,FF,FF,FF)A(FF,FF,FF,FF)A(FF,C4,D0,E2)A(FF,00,6C,B3)A(FF,1F,76,B6)A(FF,1F,76,B6)A(FB,1D,76,B6)A(00,00,00,00)A(FB,1D,76,B6)A(FF,1F,76,B6)A(FF,1E,76,B6)A(FF,18,75,B6)A(FF,80,A1,C9)A(FF,C1,CE,E1)A(FF,F2,F4,F8)A(FF,FF,FF,FF)A(FF,F6,F8,FB)A(FF,CD,D7,E7)A(FF,4E,85,BC)A(FF,11,74,B5)A(FF,1F,76,B6)A(FF,1F,76,B6)A(FB,1D,76,B6)A(00,00,00,00)A(AC,48,79,AA)A(FF,1C,76,B7)A(FF,1F,76,B6)A(FF,00,72,B5)A(FF,89,A6,CC)A(FF,BB,CA,DF)A(FF,E1,E8,F1)A(FF,F8,FA,FC)A(FF,DA,E2,ED)A(FF,00,68,B1)A(FF,0F,74,B5)A(FF,20,76,B6)A(FF,1F,76,B6)A(FF,1C,76,B7)A(AC,48,79,AA)
				A(00,00,00,00)A(21,75,7E,8C)A(EC,2C,77,B4)A(FF,1C,76,B7)A(FF,1F,76,B6)A(FF,01,72,B5)A(FF,60,8E,C0)A(FF,D8,E1,EC)A(FF,ED,F2,F7)A(FF,D6,DF,EB)A(FF,30,7A,B8)A(FF,1C,75,B6)A(FF,1F,76,B6)A(FF,1C,76,B7)A(EC,2C,77,B4)A(21,75,7E,8C)A(00,00,00,00)A(00,84,81,7B)A(6C,61,7B,9D)A(FF,0B,75,B8)A(FF,1E,76,B6)A(FF,1B,75,B6)A(FF,2B,79,B7)A(FF,9F,B6,D4)A(FF,9D,B4,D3)A(FF,A2,B8,D5)A(FF,43,81,BA)A(FF,17,75,B6)A(FF,1E,76,B6)A(FF,0B,75,B8)A(6C,61,7B,9D)A(00,84,81,7B)A(00,00,00,00)A(00,80,80,80)A(00,81,80,7F)A(90,55,7A,A4)A(FF,0D,75,B8)A(FF,1B,76,B7)A(FF,1C,76,B6)A(FF,00,6F,B4)A(FF,00,6F,B4)A(FF,00,6F,B4)A(FF,19,75,B6)A(FF,1B,76,B7)A(FF,0D,75,B8)A(90,55,7A,A4)A(00,81,80,7F)A(00,80,80,80)A(00,00,00,00)A(00,80,80,80)A(00,80,80,80)A(00,81,80,7F)A(5C,66,7C,99)A(DE,34,77,B2)A(FF,1C,76,B7)A(FF,1E,76,B6)A(FF,1F,76,B6)A(FF,1E,76,B6)A(FF,1C,76,B7)A(DE,34,77,B2)A(5C,66,7C,99)A(00,81,80,7F)A(00,80,80,80)A(00,80,80,80)A(00,00,00,00)A(00,80,80,80)A(00,80,80,80)A(00,80,80,80)A(00,84,81,7B)A(0B,7C,7F,85)A(82,59,7A,A2)A(E8,29,76,B4)A(FF,1C,76,B7)A(E8,29,76,B4)A(82,59,7A,A2)A(0B,7C,7F,85)A(00,84,81,7B)A(00,80,80,80)A(00,80,80,80)A(00,80,80,80)
				A(00,00,00,00)A(00,00,00,00)A(00,00,00,00)A(00,00,00,00)A(00,00,00,00)A(00,00,00,00)A(00,00,00,00)A(00,00,00,00)A(00,00,00,00)A(00,00,00,00)A(00,00,00,00)A(00,00,00,00)A(00,00,00,00)A(00,00,00,00)A(00,00,00,00)A(00,00,00,00);
				memcpy ((EIF_NATURAL_32 *)$a_ptr + $a_offset, &l_data, sizeof l_data - 1);
			}
			}"
		end

	build_colors (a_ptr: POINTER)
			-- Build `colors'.
		do
			c_colors_0 (a_ptr, 0)
		end

feature {NONE} -- Image data filling.

	fill_memory
			-- Fill image data into memory.
		local
			l_pointer: POINTER
		do
			if attached {EV_PIXEL_BUFFER_IMP} implementation as l_imp then
				l_pointer := l_imp.data_ptr
				if not l_pointer.is_default_pointer then
					build_colors (l_pointer)
					l_imp.unlock
				end
			end
		end

end -- IMG_GITHUB_SMALL
